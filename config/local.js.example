/**
 * Installation specific application configuration
 */
const path = require('path');

module.exports = {
    // Server instance name (alphanumeric)
    instance: 'server1',

    // Environment
    env: process.env.NODE_ENV || 'production',

    // Loaded modules
    modules: [
        'index',
    ],

    // Servers
    servers: {
        web: {
            class: 'servers.express',
            host: "0.0.0.0",
            port: 3000,
            ssl: {
                enable: false,
                key: '/etc/letsencrypt/live/server1.example.com/privkey.pem',
                cert: '/etc/letsencrypt/live/server1.example.com/fullchain.pem',
            },
            express: {
                view_engine: 'pug',
                case_sensitive_routing: true,
                strict_routing: false,
                trust_proxy: false,
            },
            options: {
                body_limit: "500mb",
            },
            middleware: [ // Middleware, in this order, service names
                'middleware.favicon',
                'middleware.requestLogger',
                'middleware.requestParser',
                'middleware.staticFiles',
                'middleware.routes',
                'middleware.errorHandler',              // should be the last one
            ],
        },
    },

    // SMTP servers
    smtp: {
        main: {
            host: 'localhost',
            port: 25,
            ssl: false,
            //user: 'username',
            //password: 'password',
        },
    },

    // PostgreSQL servers
    postgres: {
        main: {
            host: 'localhost',
            port: 5432,
            user: 'username',
            password: 'password',
            db_name: 'dbname',
            min_pool: 10,
            max_pool: 100,
        },
    },

    // Redis servers
    redis: {
        main: {
            host: 'localhost',
            port: 6379,
            //password: 'password',
        },
    },

    session: {
        expire_timeout: 14 * 24 * 60 * 60,  // seconds, delete inactive sessions
        save_interval: 60,                  // seconds, 0 to update session in the DB on every request
        secret: 'some unique secret here',  // could be "pwgen 32 1" output
    },

    email: {
        from: 'root@localhost',
        log: {
            enable: false,                  // email logger messages or not
            level: 'error',
            to: 'debug@example.com',
        },
        crash: {
            enable: false,                  // email program crash or not
            to: 'debug@example.com',
        },
    },

    cache: {
        enable: true,
        redis: 'main',                      // Name of Redis configuration to use
        expire_min: 3 * 60,                 // seconds, minimum time to cache values for (random)
        expire_max: 5 * 60,                 // seconds, maximum time to cache values for (random)
    },

    logs: {
        main: {
            level: 'info',
            default: true,
            name: 'error.log',
            path: path.join(__dirname, '..', 'logs'),
            interval: '1d',
            mode: 0o640,
        },
        access: {
            level: 'info',
            name: 'access.log',
            path: path.join(__dirname, '..', 'logs'),
            interval: '1d',
            mode: 0o640,
        },
    },

/*
    user: { // Drop privileges, otherwise comment out this section
        uid: 'www',
        gid: 'www',
    },
*/
};